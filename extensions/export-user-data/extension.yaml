name: export-user-data
displayName: Export User Data

description: >-
 Export certain data keyed on a user ID from Firestore, Realtime Database, or Cloud Storage to a Google Cloud Storage bucket.

billingRequired: true

roles:
  - role: datastore.owner
    reason: Allows the extension to export (user) data from Cloud Firestore.
  - role: firebasedatabase.admin
    reason: Allows the extension to export (user) data from Realtime Database.
  - role: storage.admin
    reason: Allows the extension to export (user) data from Cloud Storage.

resources:
  - name: exportUserData
    type: firebaseextensions.v1beta.function
    description: Triggers an export and returns a unique export ID.
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}
      availableMemoryMb: 8192
      timeout: 540s

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: CLOUD_STORAGE_EXPORT_BUCKET
    label: Cloud Storage bucket for exports
    description: >
      To which Cloud Storage bucket will you export your data?
      It is recommended to create a separate bucket for this extension. For more information,
      refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).
    type: string
    example: my-project-12345.appspot.com
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid storage bucket
    default: ${STORAGE_BUCKET}
    required: true

  - param: CLOUD_STORAGE_EXPORT_DIRECTORY
    label: Folder for storing exported data
    description: >
      To which Cloud Storage folder will you upload exported data?
    type: string
    required: true

  - param: FIRESTORE_EXPORTS_COLLECTION
    label: Firestore collection to record export metadata
    description: >
      What is the path to the collection that will contain the export tracking documents?
    type: string
    default: exports
    example: exports
    required: false
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage: Must be a valid Cloud Firestore collection

  - param: FIRESTORE_PATHS
    label: Cloud Firestore paths
    description: >-
      Which paths in your Cloud Firestore instance contain data keyed by User ID? Leave
      empty if you don't use Cloud Firestore.
      Enter the full paths, separated by commas. You can represent the User ID
      of the user with `{UID}`.
      For example, if you have the collections `users` and `admins`, and each
      collection has documents with User ID as document IDs, then you can enter
      `users/{UID},admins/{UID}`.
    type: string
    example: users/{UID},admins/{UID}
    required: false

  - param: SELECTED_DATABASE_INSTANCE
    label: Realtime Database instance
    description: >
      From which Realtime Database instance do you want to export data keyed by User ID?
      If this parameter is not specified, this extension will use your default database instance.
    type: string
    example: my-instance
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid database instance
    required: false

  - param: SELECTED_DATABASE_LOCATION
    label: Realtime Database location
    description: >
      (Only applicable if you provided the `Realtime Database instance` parameter.) From which Realtime Database location do you want to export data keyed by User ID?
    type: select
    options:
      - label: United States
        value: us-central1
      - label: Belgium
        value: europe-west1
      - label: Singapore
        value: asia-southeast1
    default: us-central1
    required: false

  - param: RTDB_PATHS
    label: Realtime Database paths
    description: >-
      Which paths in your Realtime Database instance contain data keyed by User ID? Leave
      empty if you don't use Realtime Database.
      Enter the full paths, separated by commas. You can represent the User ID
      of the exported user with `{UID}`.
      For example: `users/{UID},admins/{UID}`.
    type: string
    example: users/{UID},admins/{UID}
    required: false

  - param: STORAGE_PATHS
    label: Cloud Storage paths
    description: >-
      Where in Google Cloud Storage do you store data keyed by User ID? Leave empty if you
      don't use Cloud Storage.
      Enter the full paths to files or directories in your Storage buckets,
      separated by commas. Use `{UID}` to represent the User ID of the
      user whose data we're exporting, and use `{DEFAULT}` to represent your default Storage bucket.
      Here's a series of examples. To export all the files in your default
      bucket with the file naming scheme `{UID}-pic.png`, enter
      `{DEFAULT}/{UID}-pic.png`. To also export all the files in another bucket
      called my-app-logs with the file naming scheme `{UID}-logs.txt`, enter
      `{DEFAULT}/{UID}-pic.png,my-app-logs/{UID}-logs.txt`. To *also* export a User
      ID-labeled directory and all its files (like `media/{UID}`), enter
      `{DEFAULT}/{UID}-pic.png,my-app-logs/{UID}-logs.txt,{DEFAULT}/media/{UID}`.
    type: string
    example: "{DEFAULT}/{UID}-pic.png,my-awesome-app-logs/{UID}-logs.txt"
    required: false

  - param: CUSTOM_HOOK_ENDPOINT
    label: Custom hook endpoint
    description: >-
      Specify a function URL to call that will return an object listing paths in services to export data from.
      See the pre-install documentation for more details.
    example: https://us-west1-my-project-id.cloudfunctions.net/myTransformFunction
    type: string
    required: false

  - param: ENABLE_ZIP
    label: Enable Zipping of Exports
    description: >-
      If enabled, will compress all exports into one zip file in storage.
    type: select
    options:
      - label: Yes
        value: yes
      - label: No
        value: no
    default: no
    required: false
  

events:
  - type: firebase.extensions.export-user-data.v1.firestore
    description: Occurs when a collections/document export has been triggered.
  - type: firebase.extensions.export-user-data.v1.rtdb
    description: Occurs when a real-time database export has been triggered.
  - type: firebase.extensions.export-user-data.v1.storage
    description: Occurs when a real-time storage export has been triggered.
  - type: firebase.google.v1.export-pending
    description: Event indicating that an export of data keyed by User ID to Cloud Storage has begun.
  - type: firebase.google.v1.export-complete
    description: Event indicating that an export of data keyed by User ID to Cloud Storage has completed.
