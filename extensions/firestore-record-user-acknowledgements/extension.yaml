name: firestore-record-user-acknowledgements
version: 0.0.1
specVersion: v1beta

displayName: Record User Acknowledgements
description: Provides an out of the box acknowledgement management extension for Firestore

license: Apache-2.0

sourceUrl: https://github.com/invertase/firebase-extensions/tree/main/extensions/firestore-record-user-acknowledgements
releaseNotesUrl: https://github.com/invertase/firebase-extensions/tree/main/extensions/firestore-record-user-acknowledgements/CHANGELOG.md

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Invertase
    email: oss@invertase.io
    url: https://github.com/invertase

billingRequired: true

roles:
  - role: datastore.user
    reason: Allows this extension to access Cloud Firestore to read and process acknowledgements.

resources:
  - name: getNotice
    type: firebaseextensions.v1beta.function
    description:
      Returns the latest notice document type along with any user acknowledgement documents. Optionally, a version can be specified to return a specific notice. 
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}

  - name: acknowledgeNotice
    type: firebaseextensions.v1beta.function
    description:
      Acknowledges a notice by ID.
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}

  - name: unacknowledgeNotice
    type: firebaseextensions.v1beta.function
    description:
      Unacknowledges a notice by ID.
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}

  - name: getAcknowledgements
    type: firebaseextensions.v1beta.function
    description:
      Returns a list of all user acknowledgements in creation order, including the notice document.
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}
  
  - name: createIndex
    type: firebaseextensions.v1beta.function
    description:
      A function used to help with creating Firestore indices that are required for this extension.
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}
params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your Storage bucket. For help selecting a
      location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: NOTICES_COLLECTION
    label: Notices collection
    description: >-
      What is the collection name that you would like to use to store notices?
    type: string
    default: notices
    required: true
    immutable: false

  - param: ACKNOWLEDGEMENTS_COLLECTION
    label: Acknowledgements collection
    description: >-
      What is the collection name that you would like to use to store acknowledgements?
    type: string
    default: acknowledgements
    required: true
    immutable: false

events:
  - type: firebase.extensions.firestore-record-user-acknowledgements.v1.acknowledgement
    description: Event indicating that the Notice has been acknowledged.
  - type: firebase.extensions.firestore-record-user-acknowledgements.v1.unacknowledgement
    description: Event indicating that the Notice has been unacknowledged.